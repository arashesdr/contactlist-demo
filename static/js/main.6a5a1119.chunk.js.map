{"version":3,"sources":["actions/tab.actions.js","components/Tab.jsx","components/Card.jsx","components/CardInfo.jsx","components/Cards.jsx","actions/tabContent.action.js","components/Tabs.jsx","App.js","actions/contact.actions.js","services/server.js","services/contactServices.js","reducers/index.js","reducers/contact.reducer.js","reducers/tab.reducer.js","reducers/contacsCounter.reducer.js","reducers/tabContenet.reducer.js","reducers/error.reducer.js","store/index.js","index.js"],"names":["clickTabHandle","contact","type","payload","Tab","text","toggleState","toggleTab","index","count","isDisable","className","onClick","disabled","toUpperCase","Card","dispatch","useDispatch","window","scrollTo","src","picture","thumbnail","alt","style","width","height","name","title","first","last","CardInfo","large","email","phone","location","street","city","state","postcode","login","username","Cards","contacts","clickItem","useSelector","store","tabClicked","map","getTabContent","tabKey","a","contactList","specificList","filter","item","substr","toLowerCase","Tabs","contacsTabInfo","tabContent","errorHandler","useState","setToggleState","tab","key","color","App","useEffect","document","config","server","axios","create","baseURL","serverConfig","userUrl","headers","getContactList","url","get","getContactsLetterCount","tabContentCounts","tabs","forEach","tabContentCountsObject","length","push","reducers","combineReducers","action","createStore","compose","applyMiddleware","reduxThunk","numberCards","data","results","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a5a1119.chunk.js","sourcesContent":["export const clickTabHandle = (contact) => {\r\n  return {\r\n    type: \"CLICK\",\r\n    payload: contact,\r\n  };\r\n};\r\n","import \"../App.css\";\r\n\r\nconst Tab = ({ text, toggleState, toggleTab, index, count }) => {\r\n  const isDisable = count === 0 ? true : false;\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={toggleState === index ? \"tabs active-tabs\" : \"tabs\"}\r\n        onClick={toggleTab}\r\n        disabled={isDisable}\r\n      >\r\n        <span className={!isDisable ? \"tab-key\" : \"tabkey-disabled\"}>\r\n          {text.toUpperCase()}\r\n        </span>\r\n        <span className={!isDisable ? \"tab-count\" : \"tabcount-disaled\"}>\r\n          {count}\r\n        </span>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport { clickTabHandle } from \"../actions/tab.actions\";\r\n\r\nimport \"./css/card.css\";\r\n\r\nconst Card = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    dispatch(clickTabHandle(contact));\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column chip\" onClick={handleClick}>\r\n        <img\r\n          src={contact.picture.thumbnail}\r\n          alt=\"Person\"\r\n          style={{ width: \"96\", height: \"96\" }}\r\n        />\r\n        {`${contact.name.title} ${contact.name.first} ${contact.name.last}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport { clickTabHandle } from \"../actions/tab.actions\";\r\nimport \"./css/card.css\";\r\n\r\nconst CardInfo = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"column info\">\r\n      <header className=\"info-header\">\r\n        {`${contact.name.title} ${contact.name.first} ${contact.name.last}`}\r\n        <span\r\n          className=\"closebtn\"\r\n          onClick={() => dispatch(clickTabHandle(null))}\r\n        >\r\n          &times;\r\n        </span>\r\n      </header>\r\n      <div className=\"info-container\">\r\n        <img src={contact.picture.large} alt=\"Avatar\" className=\"info-image\" />\r\n        <div className=\"info-detail\">\r\n          <p>\r\n            <strong className=\"info-title\">Email:</strong>\r\n            {contact.email}\r\n          </p>\r\n          <p>\r\n            <strong className=\"info-title\">Phone:</strong>\r\n            {contact.phone}\r\n          </p>\r\n          <p>\r\n            <strong className=\"info-title\">Street:</strong>\r\n            {contact.location.street.name}\r\n          </p>\r\n          <p>\r\n            <strong className=\"info-title\">City:</strong>\r\n            {contact.location.city}\r\n          </p>\r\n          <p>\r\n            <strong className=\"info-title\">State:</strong>\r\n            {contact.location.state}\r\n          </p>\r\n          <p>\r\n            <strong className=\"info-title\">Postcode:</strong>\r\n            {contact.location.postcode}\r\n          </p>\r\n          <br />\r\n        </div>\r\n      </div>\r\n      <div className=\"info-bookmarkRibbon\">\r\n        <span className=\"info-user\">{`User: ${contact.login.username}`}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport Card from \"./Card\";\r\nimport CardInfo from \"./CardInfo\";\r\n\r\nimport \"./css/card.css\";\r\n\r\nconst Cards = ({ contacts }) => {\r\n  const clickItem = useSelector((store) => store.tabClicked);\r\n\r\n  return (\r\n    <div>\r\n      {clickItem !== null ? <CardInfo contact={clickItem} /> : null}\r\n      {contacts.map((contact, index) => (\r\n        <Card key={index} contact={contact} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","export const getTabContent = (contacts, tabKey) => {\r\n  return async (dispatch) => {\r\n    const contactList = [...contacts];\r\n    const specificList = contactList.filter(\r\n      (item) => item.name.last.substr(0, 1).toLowerCase() === tabKey\r\n    );\r\n    await dispatch({ type: \"LOAD\", payload: specificList });\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { clickTabHandle } from \"../actions/tab.actions\";\r\nimport Tab from \"./Tab\";\r\nimport Cards from \"./Cards\";\r\nimport { getTabContent } from \"../actions/tabContent.action\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Tabs = () => {\r\n  const contacts = useSelector((store) => store.contact);\r\n  const contacsTabInfo = useSelector((store) => store.contacsTabInfo);\r\n  const tabContent = useSelector((store) => store.tabContent);\r\n  const errorHandler = useSelector((store) => store.errorHandler);\r\n  const dispatch = useDispatch();\r\n\r\n  const [toggleState, setToggleState] = useState(0);\r\n\r\n  const toggleTab = (index, tab) => {\r\n    dispatch(clickTabHandle(null));\r\n    setToggleState(index);\r\n    dispatch(getTabContent(contacts, tab));\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"bloc-tabs\">\r\n        {!errorHandler && contacsTabInfo !== null\r\n          ? contacsTabInfo.map((tab, index) => (\r\n              <Tab\r\n                text={tab.key}\r\n                toggleState={toggleState}\r\n                toggleTab={() => toggleTab(index, tab.key)}\r\n                index={index}\r\n                key={index}\r\n                count={tab.count}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n      <div className=\"content-tabs\">\r\n        <div className=\"content  active-content\">\r\n          {tabContent !== null ? (\r\n            <Cards contacts={tabContent} />\r\n          ) : (\r\n            <div className=\"loader\">\r\n              <Loader type=\"Watch\" color=\"orange\" height={80} width={80} />\r\n              <h5>Please wait ...</h5>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import { useEffect } from \"react\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Tabs from \"./components/Tabs\";\nimport config from \"./data/configs.json\";\nimport \"./App.css\";\n\nfunction App() {\n  useEffect(() => {\n    document.title = config.title;\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Tabs />\n    </div>\n  );\n}\n\nexport default App;\n","import { getContactList } from \"./../services/contactServices\";\r\nimport config from \"../data/configs.json\";\r\nimport { getTabContent } from \"./tabContent.action\";\r\n\r\nconst getContactsLetterCount = (contacts) => {\r\n  let tabContentCounts = [];\r\n  const tabsContent = config.tabs;\r\n\r\n  tabsContent.forEach((tab) => {\r\n    const tabContentCountsObject = {\r\n      key: tab,\r\n      count: contacts.filter(\r\n        (item) => item.name.last.substr(0, 1).toLowerCase() === tab\r\n      ).length,\r\n    };\r\n    tabContentCounts.push(tabContentCountsObject);\r\n  });\r\n\r\n  return tabContentCounts;\r\n};\r\n\r\nexport const getContacts = (count) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await getContactList(count);\r\n      await dispatch({ type: \"INIT\", payload: data.results });\r\n\r\n      const tabContentCounts = getContactsLetterCount(data.results);\r\n      await dispatch({ type: \"COUNTER\", payload: tabContentCounts });\r\n\r\n      dispatch(getTabContent(data.results, \"a\"));\r\n    } catch (err) {\r\n      dispatch({ type: \"SET_ERROR\", payload: err });\r\n    }\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport serverConfig from \"../data/configs.json\";\r\n\r\nexport const server = axios.create({\r\n  baseURL: serverConfig.userUrl,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import { server } from \"./server\";\r\n\r\nexport const getContactList = (count) => {\r\n  const url = `/?results=${count}&inc=name,email,location,login,picture,phone&nat=US`;\r\n  return server.get(url);\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { contacsCounterReducer } from \"./contacsCounter.reducer\";\r\nimport { tabContentReducer } from \"./tabContenet.reducer\";\r\nimport { contactReducer } from \"./contact.reducer\";\r\nimport { errorReducer } from \"./error.reducer\";\r\nimport { tabReducer } from \"./tab.reducer\";\r\n\r\nexport const reducers = combineReducers({\r\n  contact: contactReducer,\r\n  tabClicked: tabReducer,\r\n  contacsTabInfo: contacsCounterReducer,\r\n  tabContent: tabContentReducer,\r\n  errorHandler: errorReducer,\r\n});\r\n","export const contactReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"INIT\":\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const tabReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"CLICK\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const contacsCounterReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"COUNTER\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const tabContentReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD\":\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const errorReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ERROR\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport { getContacts } from \"../actions/contact.actions\";\r\nimport { reducers } from \"./../reducers/index\";\r\nimport config from \"../data/configs.json\";\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  compose(applyMiddleware(reduxThunk))\r\n);\r\n\r\nstore.dispatch(getContacts(config.numberCards));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}